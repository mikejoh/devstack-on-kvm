## template: jinja
#cloud-config

package_upgrade: true
package_update: true
package_reboot_if_required: true

packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - software-properties-common
  - jq
  - qemu-guest-agent
  - ripgrep

preserve_hostname: false
hostname: ${hostname}
manage_etc_hosts: true

apt:
  preserve_sources_list: true
  # sources_list: |
  #   deb $MIRROR $RELEASE main restricted universe
  #   deb-src $MIRROR $RELEASE main restricted
  #   deb $PRIMARY $RELEASE universe restricted
  #   deb $SECURITY $RELEASE-security multiverse

  # primary:
  #   - arches: [amd64]
  #     uri: http://se.archive.ubuntu.com/ubuntu

  # security:
  #   - arches: [amd64]
  #     uri: http://security.ubuntu.com/ubuntu

  # conf: |
  #     APT {
  #         Get {
  #             Assume-Yes 'true';
  #             Fix-Broken 'true';
  #         }
  #     }

growpart:
  mode: auto
  devices: ['/']

users:
- name: cloud
  lock_passwd: true
  sudo: ['ALL=(ALL) NOPASSWD:ALL']
  ssh_authorized_keys:
  - ${ssh_public_key}

write_files:
- path: /root/.vimrc
  permissions: 0644
  content: |
    set tabstop=2
    set expandtab
    set shiftwidth=2
- path: /root/install_devstack.sh
  permissions: 0755
  content: |
    #!/usr/bin/env bash

    echo "Started: $(date)" >> $HOME/time.txt

    export NEEDRESTART_MODE=a

    sudo systemctl enable qemu-guest-agent
    sudo systemctl start qemu-guest-agent
    
    sudo apt-get purge -y esl-erlang || true
    sudo apt-get install -y erlang rabbitmq-server || true
    sudo apt-get install -y runc || true
    sudo apt-get purge -y python3-simplejson python3-pyasn1-modules postgresql* || true
    sudo apt install -y python3-pip || true
    sudo python3 -m pip install --upgrade pip || true
    sudo apt autoremove -y || true

    git config --global http.postBuffer 157286400

    git clone https://github.com/openstack/devstack.git $HOME/devstack
    cd $HOME/devstack
    git checkout ${openstack_rev}

    cat <<EOF > $HOME/devstack/localrc
    ADMIN_PASSWORD=secret
    DATABASE_PASSWORD=root
    RABBIT_PASSWORD=secret
    SERVICE_PASSWORD=secret
    SWIFT_HASH=1234123412341234
    USE_PYTHON3=True
    INSTALL_TEMPEST=False
    GIT_BASE=https://github.com
    
    # Enable Logging
    LOGFILE=/opt/stack/logs/stack.sh.log
    VERBOSE=True
    LOG_COLOR=True

    # Glance
    GLANCE_LIMIT_IMAGE_SIZE_TOTAL=10000

    # Nova
    LIBVIRT_TYPE=kvm

    # Enable OVN
    Q_AGENT=ovn
    Q_ML2_PLUGIN_MECHANISM_DRIVERS=ovn,logger
    Q_ML2_PLUGIN_TYPE_DRIVERS=local,flat,vlan,geneve
    Q_ML2_TENANT_NETWORK_TYPE="geneve"

    # Enable OVN services
    enable_service ovn-northd
    enable_service ovn-controller
    enable_service q-ovn-metadata-agent

    # Use Neutron
    enable_service q-svc

    # Disable Neutron agents not used with OVN.
    disable_service q-agt
    disable_service q-l3
    disable_service q-dhcp
    disable_service q-meta

    # Enable services, these services depend on neutron plugin.
    enable_plugin neutron https://opendev.org/openstack/neutron ${openstack_rev}
    enable_service q-trunk
    enable_service q-dns

    # Cinder (OpenStack Block Storage) is disabled by default to speed up
    # DevStack a bit. You may enable it here if you would like to use it.
    #disable_service cinder c-sch c-api c-vol

    ENABLE_CHASSIS_AS_GW=True

    # If you wish to use the provider network for public access to the cloud,
    # set the following
    #Q_USE_PROVIDERNET_FOR_PUBLIC=True

    # Create public bridge
    OVN_L3_CREATE_PUBLIC_NETWORK=True

    # This needs to be equalized with Neutron devstack
    PUBLIC_NETWORK_GATEWAY="172.24.4.1"

    # Octavia configuration
    OCTAVIA_NODE="api"
    DISABLE_AMP_IMAGE_BUILD=True
    enable_plugin barbican https://opendev.org/openstack/barbican ${openstack_rev}
    enable_plugin octavia https://opendev.org/openstack/octavia ${openstack_rev}
    enable_plugin octavia-dashboard https://opendev.org/openstack/octavia-dashboard ${openstack_rev}
    LIBS_FROM_GIT+=python-octaviaclient
    enable_service octavia
    enable_service o-api
    enable_service o-hk
    enable_service o-da
    disable_service o-cw
    disable_service o-hm

    # OVN octavia provider plugin
    enable_plugin ovn-octavia-provider https://opendev.org/openstack/ovn-octavia-provider ${openstack_rev}
    EOF

    $HOME/devstack/tools/create-stack-user.sh

    mv $HOME/devstack /opt/stack/
    chown -R stack:stack /opt/stack/devstack/

    su - stack -c /opt/stack/devstack/stack.sh

    echo 'source /opt/stack/devstack/openrc admin admin' >> /opt/stack/.bashrc

    echo "Finished: $(date)" >> $HOME/time.txt

runcmd:
  - bash /root/install_devstack.sh

final_message: "Done!"
